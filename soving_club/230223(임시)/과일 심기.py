# -*- coding: utf-8 -*-
'''
집의 정원에 과일를 심으려고 한다. 정원은 사각형 모양이며 과일는 세로 줄로 심을 예정이다. 정원의 가장 왼쪽 세로 줄부터 과일를 심어야 하며 앞으로 과일가 커질 것을 고려하여 한 줄씩 띄어 심으려고 한다. 각 위치에 심을 과일의 가격은 알고 있다고 가정할 때 정원에 과일를 심기 위한 총 비용과 심은 과일의 수를 구해보자. 또한 심은 과일 중 가장 비싼 과일의 가격과 해당 과일의 열 번호를 계산해보자. 만약 가장 비싼 과일가 여러 개 심어져 있는 경우 가장 큰 열의 번호를 계산한다.
예를 들어 정원의 크기가 3 X 3이고 각 위치에 심을 과일의 가격이 다음 그림과 같다면
과일를 심는 총 비용은 5+7+4+3+8+5 = 32가 되고 심은 과일의 수는 6이 된다. 또한 가장 비싼 과일의 가격은 8이며 해당 과일가 심어진 열은 3이 된다.
또 다른 예를 들어 보면, 다음 그림과 같이 정원 크기가 4 X 5 인 경우 과일를 심는 총 비용은 3+9+7+5+4+7+2+8+8+5+9+6 = 73이 되고 심은 과일의 수는 12가 된다. 또한 가장 비싼 과일의 가격은 9이며 해당 과일는 1열과 5열에 심어져 있지만 열 번호가 더 큰 5가 계산된다.
정원 크기인 N X M 리스트가 주어질 때 과일를 심는 총 비용과 심은 과일의 수, 심은 과일 중 가장 비싼 과일의 가격, 가장 비싼 과일가 심어진 열을 출력하는 프로그램을 만드시오.

[출력]
각 줄에 #과 1부터인 테스트케이스번호를 출력하고 나무를 심는 총 비용, 심은 나무의 수, 가장 비싼 나무의 가격, 가장 비싼 나무가 심어진 열을 빈칸으로 구분하여 출력하시오

입력
3
3 3
5 2 3
7 1 8
4 6 5
4 5
3 2 4 1 8
9 5 7 6 5
7 3 2 5 9
5 1 8 4 6
5 6
40 15 33 52 12 37
70 23 73 12 34 54
23 10 37 15 45 80
50 60 48 24 19 20
55 28 32 66 80 42

출력
#1 32 6 8 3
#2 73 12 9 5
#3 651 15 80 5
'''

T = int(input())

for tc in range(1, T + 1):
    N, M = map(int, input().split())
    arr = [list(map(int, input().split())) for _ in range(N)]
    SUM = 0 # 나무를 심는 총 비용
    cnt = 0 # 심은 나무의 수
    EX = 0  # 가장 비싼 나무의 가격
    EX_col = 0  # 가장 비싼 나무가 심어진 열
    for i in range(0, M, 2):
        for j in range(N):
            SUM += arr[j][i]
            cnt += 1
            if EX <= arr[j][i]:
                EX = arr[j][i]
                EX_col = i + 1
    print(f'#{tc} {SUM} {cnt} {EX} {EX_col}')
