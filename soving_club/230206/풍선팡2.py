'''
종이 꽃가루가 들어있는 풍선이 NxM 크기의 격자판에 붙어있는데, 어떤 풍선을 터뜨리면 상하좌우의 풍선이 추가로 터진다고 한다.
다음의 경우 가운데 풍선을 터뜨리면 상하좌우의 풍선이 추가로 1개씩 터지면서 총 5개의 꽃가루가 날리게 된다.
NxM개의 풍선에 들어있는 종이 꽃가루 개수A가 주어지면, 한 개의 풍선을 선택해 터뜨렸을 때 날릴 수 있는 꽃가루 수 중 최대값을 출력하는 프로그램을 만드시오.
(3<=N, M<=100)

입력
첫 줄에 테스트케이스 수 T, 다음 줄부터 테스트케이스 별로 첫 줄에 N과 M, 이후 N줄에 걸쳐 M개씩 풍선에 든 종이 꽃가루 개수가 주어진다.

출력
#과 테스트케이스 번호, 빈칸에 이어 종이 꽃가루의 최대 개수를 출력한다.

입력
3
3 5
2 1 1 2 2
2 2 1 2 2
2 2 1 1 2
5 5
3 4 1 2 3
3 4 1 3 2
2 3 2 4 1
1 4 4 1 3
2 2 3 4 4
5 8
1 3 4 4 4 4 3 3
4 1 2 4 3 1 4 4
4 1 4 4 1 4 2 1
3 2 4 2 1 1 2 1
4 4 1 4 4 2 2 2

출력
#1 8
#2 16
#3 17
'''
# ----------------------------------------------------------------- #
# 2023 - 02 - 24 복습

T = int(input())
for tc in range(1, T + 1):
    N, M = map(int, input().split())
    arr = [list(map(int, input().split())) for _ in range(N)]    # 풍선을 담을 2차원 배열
    mr = [0, 0, 1, -1]  # 4방 탐색
    mc = [1, -1, 0, 0]
    result = []         # 풍선이 터졌을때 나오는 꽃가루 리스트
    for i in range(N):
        for j in range(M):
            SUM = arr[i][j] # 터진 풍선에서 나온 꽃가루는 항상 포함
            for k in range(4):
                nr = i + mr[k]
                nc = j + mc[k]
                if 0 <= nr < N and 0 <= nc < M:
                    SUM += arr[nr][nc]  # 터진 풍선의 조건에 맞는 방향에 있는 꽃가루를 더해줌.
            result.append(SUM)
    # 터진 꽃가루 중 가장 많은 꽃가루를 출력
    print(f'#{tc} {max(result)}')