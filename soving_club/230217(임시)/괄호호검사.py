'''
        N, M = map(int, input().split())

(1)스택을 이용해 괄호가 정상적으로 표시되어 있는지 검사하는 알고리즘에 대해 간단히 설명하라.
    스택은 LIFO 구조를 가진다. 제일 마지막에 push된 데이터가 가장 먼저 pop된다는 뜻이다.
    이러한 스택을 이용해 괄호가 정상적으로 표시되어 있는지 검사하는 알고리즘의 원리는 다음과 같다.
    정상적인 괄호라면 여는 괄호 다음은 닫는 괄호가 온다. 그렇기 때문에 스택의 LIFO구조를 활용해
    먼저 '(' 여는 괄호를 만나면 스택에 push 하고 ')' 닫는 괄호를 만나면 스택을 pop을 하고,
    만약 괄호 쌍이 맞지 않는다면 알고리즘을 break한다.
    break 되지 않는다면 스택의 TOP에 저장되어 있는 가장 마지막에 들어온 여는 괄호와 바로 다음으로 push되는 닫는 괄호가 한쌍을 이룬다는 뜻이므로




'''

'''
(2)위의 문자열을 스택을 이용해 검사하는 과정에 대해, 나머지 단계의 스택 내부 상태를 표시하고 간단히 설명하라. 마지막에는 괄호가 정상인지 오류인지와 그 이유를 설명해야 한다.
    스택은 [  ]로 표시하고, 저장 원소의 구분은 쉼표나 빈 칸으로 표시한다.
'''
'''
[ ( ]    # 여는 괄호를 만나 push
[ ( , ( ]    # 여는 괄호를 만나 push
[ ( ]    # 닫는 괄호를 만나 pop
입력
N, M = map(int, input().split())
arr = list(map(int, input().split())
sample_input.txt
출력
['('] # 여는 괄호를 만나 push
['(', '('] # 여는 괄호를 만나 push
['('] # 닫는 괄호를 만나 pop
['(', '('] # 여는 괄호를 만나 push
['('] # 닫는 괄호를 만나 pop
[] # 닫는 괄호를 만나 pop
스택에 ~ 괄호 쌍이 정상이다. #검사 성공

['('] # 여는 괄호를 만나 push
['(', '('] # 여는 괄호를 만나 push
['(', '(', '('] # 여는 괄호를 만나 push
['(', '('] # 닫는 괄호를 만나 pop
['(', '(', '('] # 여는 괄호를 만나 push
['(', '('] # 닫는 괄호를 만나 pop
['('] # 닫는 괄호를 만나 pop
스택에 ~ 괄호의 쌍이 올바르지 않음 # 검사 실패
'''

STR = 'N, M = map(int, input().spl(it())()(()))'
stack = []
result = 1
for i in STR:
    if i == '(':
        stack.append(i)
    elif i == ')':
        if len(stack) != 0:
            if stack[-1] == '(':
                stack.pop()
            else:
                result = 0
                break
        else:
            result = 0
            break
if result == 0:
    print('괄호가 비정상적으로 표시되어 있습니다.')
else:
    print('괄호가 정상적으로 표시되어 있습니다.')

